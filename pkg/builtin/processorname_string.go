// Code generated by "stringer -type ProcessorName"; DO NOT EDIT.

package builtin

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[URLPathParamValSetter-0]
	_ = x[URLQueryStringParamValSetter-1]
	_ = x[PyVarAssignSetter-2]
	_ = x[PyDictFieldAssignSetter-3]
	_ = x[PyDictLiteralFieldSetter-4]
	_ = x[PyTupleSetter-5]
	_ = x[PHPVarAssignSetter-6]
	_ = x[PHPAssocArrayFieldAssignSetter-7]
	_ = x[PHPAssocArrayLiteralFieldSetter-8]
	_ = x[PHPConstDefineSetter-9]
	_ = x[JSVarAssignSetter-10]
	_ = x[JSObjFieldAssignSetter-11]
	_ = x[JSObjLiteralFieldSetter-12]
	_ = x[GoVarAssignSetter-13]
	_ = x[GoHashFieldAssignSetter-14]
	_ = x[GoHashLiteralFieldSetter-15]
	_ = x[GoFlagDefaultValSetter-16]
	_ = x[RubyVarAssignSetter-17]
	_ = x[RubyHashFieldAssignSetter-18]
	_ = x[RubyArrowParamSetter-19]
	_ = x[RubyColonParamSetter-20]
	_ = x[ConfParamSystemdServiceEnvVarSetter-21]
	_ = x[ConfParamLogstashStyleSetter-22]
	_ = x[ConfParamLogstashStyleEnvVarDefaultSetter-23]
	_ = x[ShellScriptVarAssignSetter-24]
	_ = x[ShellCmdParamValSetter-25]
	_ = x[YAMLDictFieldValSetter-26]
	_ = x[JSONObjFieldValSetter-27]
	_ = x[XMLTagValSetter-28]
	_ = x[XMLTagValKeyAsAttrSetter-29]
	_ = x[XMLAttrValSetter-30]
	_ = x[HTMLTableRowValSetter-31]
	_ = x[GenericSetter-32]
	_ = x[RSAPrivateKeyPEM-33]
	_ = x[OpenSSHPrivateKeyPEM-34]
	_ = x[ECPrivateKeyPEM-35]
	_ = x[PGPPrivateKeyBlockPEM-36]
	_ = x[SlackTokenRegex-37]
	_ = x[FacebookOAuthRegex-38]
	_ = x[GoogleOAuthRegex-39]
	_ = x[TwitterRegex-40]
	_ = x[HerokuAPIKeyRegex-41]
	_ = x[SlackWebhookRegex-42]
	_ = x[GCPServiceAccountRegex-43]
	_ = x[TwilioAPIKeyRegex-44]
	_ = x[URLPasswordRegex-45]
	_ = x[GenericSecretRegex-46]
	_ = x[Base64Entropy-47]
	_ = x[HexEntropy-48]
}

const _ProcessorName_name = "URLPathParamValSetterURLQueryStringParamValSetterPyVarAssignSetterPyDictFieldAssignSetterPyDictLiteralFieldSetterPyTupleSetterPHPVarAssignSetterPHPAssocArrayFieldAssignSetterPHPAssocArrayLiteralFieldSetterPHPConstDefineSetterJSVarAssignSetterJSObjFieldAssignSetterJSObjLiteralFieldSetterGoVarAssignSetterGoHashFieldAssignSetterGoHashLiteralFieldSetterGoFlagDefaultValSetterRubyVarAssignSetterRubyHashFieldAssignSetterRubyArrowParamSetterRubyColonParamSetterConfParamSystemdServiceEnvVarSetterConfParamLogstashStyleSetterConfParamLogstashStyleEnvVarDefaultSetterShellScriptVarAssignSetterShellCmdParamValSetterYAMLDictFieldValSetterJSONObjFieldValSetterXMLTagValSetterXMLTagValKeyAsAttrSetterXMLAttrValSetterHTMLTableRowValSetterGenericSetterRSAPrivateKeyPEMOpenSSHPrivateKeyPEMECPrivateKeyPEMPGPPrivateKeyBlockPEMSlackTokenRegexFacebookOAuthRegexGoogleOAuthRegexTwitterRegexHerokuAPIKeyRegexSlackWebhookRegexGCPServiceAccountRegexTwilioAPIKeyRegexURLPasswordRegexGenericSecretRegexBase64EntropyHexEntropy"

var _ProcessorName_index = [...]uint16{0, 21, 49, 66, 89, 113, 126, 144, 174, 205, 225, 242, 264, 287, 304, 327, 351, 373, 392, 417, 437, 457, 492, 520, 561, 587, 609, 631, 652, 667, 691, 707, 728, 741, 757, 777, 792, 813, 828, 846, 862, 874, 891, 908, 930, 947, 963, 981, 994, 1004}

func (i ProcessorName) String() string {
	if i < 0 || i >= ProcessorName(len(_ProcessorName_index)-1) {
		return "ProcessorName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ProcessorName_name[_ProcessorName_index[i]:_ProcessorName_index[i+1]]
}
