---

# Output directory. Relative paths are relative to cwd with command is run.
output-dir: ./output

# How detailed should the log be? Valid values are "trace", "debug", "info", "warning", "error",
# "fatal" and "panic" (default "info").
#log-level: debug

# If set to true, the repo list and code used in the last search are be reused if available,
# and no fetches will be made (default: false).
#skip-source-prep: true

# If set to false, only log output is displayed, without progress bars (default: true).
#interactive: false

# If set to true, a non-zero exit code is emitted if secrets are found (default: false).
non-zero: false

# If set to true, no `./output/report/secrets/secret-*.yaml` files will be generated (default: false).
#skip-report-secrets: true

# Where to pull a list of remote repos from, and where to clone them from
source:
  provider: github

  # GitHub organization to search
  organization: pantheon-systems

  # GitHub API token (requires "repo" access)
  # Safer to use the `--source.token=TOKENVALUE` command parameter than a config file
  token: ''

  # Repos to search, or leave empty to search all repos for the organization (barring excludes)
  repos:
  #- repo-to-search

  # Automatically exclude repos that are forks (default: false)?
  exclude-forks: true

  # Repos to exclude from the search
  exclude-repos:
    - autotag
    - blank-upstream
    - certificate-bundling
    - design
    - di-ruby-lvm-attrib
    - documentation
    - drops-6
    - drops-7
    - drops-8
    - drupal
    - empty
    - fedora-kernel
    - fedora-openssl
    - fusedav
    - iozone
    - libgnunet
    - nginx
    - pantheon-dev-resources
    - php
    - php-bench
    - rpmbuild-php
    - search-secrets
    - stunnel-dev
    - stunnel-rpm
    - systemd
    - throttle-concurrent-builds-plugin
    - timeout
    - truffleHog
    - varnish-rpm
    - WordPress
    - wordpress-network

# After a scan, you can copy `./output/report/secrets/secret-*.yaml` files to the directory specified here,
# and they will be whitelisted in the future (see README for more details). Relative paths are relative to cwd with command is run.
whitelist-secret-dir: ./whitelist

# Whitelist files with paths that match any of these expressions.
# If a backreference is returned, there is an additional string match between it and the entire path.
whitelist-path-match:
  # By extension
  - '\.(?:eps|eot|jpe?g|png1?|ico|svg|gif|psd|tar|tar\.gz|tgz|zip|rar|woff2?|ttf|p12|mp4|mp3|hpi|sqlite3?|pyc|db|tf)$'
  - '\.(?:DS_Store|lock|min\.js|slim\.js|css\.map|js\.map|egg|otf|phar|sketch|pdf|crdownload|ipynb|sass|s?css|less)$'
  - '\.(?:jsx\.snap|ai|svgp?|mod|sum|patch|log|sql|supp|sums|feature|mk)$'
  - '-lock\.js$'
  - '-lock\.json$'
  - '-svg\.(?:pug|jade)$'
  - 'org_chart'
  - 'logs-first'
  - 'jinja2'

  # By directory/file
  - '\bvendor/'
  - '\bjs/dist/'
  - '\bcss/'
  - '\bassets/'
  - '\bimages/'
  - '\bscreenshots/'
  - '\b[iI]llustrations/'
  - '\bpython[^/]{1,5}/site-packages/'
  - '\bnodejs/src/'
  - '\bdist-info/'
  - '\blocust-tasks/[^\.]+\.txt/'
  - '\bpantheon-ca-cert.yml$'
  - '\bsource/_docs/'
  - '-notices\.md$'
  - 'README\.md'
  - '\.gist_token$'
  - '^devops/k8s/secrets/non-prod/'
  - '\bVERIFICATION(?:\.md)?$`'
  - 'report-[^\.]+.html'
  - '^config/(?:develop|development|test|non-prod)/'
  - '/sites_info.csv$'
  - 'system.performance.yml$'
  - '00-iam-gcs-fail$'
  - 'UPSTREAM_GIT_REF$'
  - 'footer_scripts.html$'

  # Tests
  - '_[Tt]ests?\..{3,4}$'
  - '\b[Tt]ests?/'
  - '\b[Ff]ixtures/'
  - '\b__tests__/'
  - '\btests?'
  - '\btest_?data/'
  - '\bspec/'
  - '\bspec\.'
  - '\.test\.'
  - '-test\.'
  - '_test\.'
  - 'testapp\.'
  - 'test_?fixtures'
  - '^spec/'


  # Misc
  - 'theme\.inc'
  - 'Style Guide'
  - '^LICENCE$'
  - 'Pipfile$'
  - '_org_chart-'
  - '\.gitmodules'
  - '\.gitignore'
  - 'packer_build'
  - '\brequirements.txt$'
  - '\bphp-slow-log\.md'

  # FIXME auth0-config is giving false positives
  # Figure out some way to to define whitelist for unpredictabl3e multiline things. Perhaps a smartish callback function?
  - '/connections[^\.]*.json$'
  - 'image-pull-secret.yaml'
  - 'coveralls.yml$'
  # ??? https://github.com/pantheon-systems/user-lifecycle-tracking/blob/b051389630222dcef53185de4b89f82c2616ff81/app/lib/werkzeug/_internal.py#L353-L418
  - 'lib/werkzeug/_internal.py'

# Rules
# Each rule is run against every commit to detect and process findings. See README for a full explanation.
rules:

  # Regex rules
  # If the pattern matches any added (not deleted or equal) line in a commit, a finding will be registered.
  - name: slack-token
    processor: regex
    regex: '(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})'
  - name: facebook-oauth
    processor: regex
    regex: '[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[''|"][0-9a-f]{32}[''|"]'
  - name: twitter-oauth
    processor: regex
    regex: '[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[''|"][0-9a-zA-Z]{35,44}[''|"]'
  - name: github
    processor: regex
    regex: '[g|G][i|I][t|T][h|H][u|U][b|B].*[''|"][0-9a-zA-Z]{35,40}[''|"]'
    whitelist-code-match:
      # Check cookbook definition, git ref
      - ':ref => ''[^'']+'''
      - 'github" data-branch="[^"]+"'
      - 'GITHUB_USER_TOKEN = "[^"]+"'
  - name: google-oauth
    processor: regex
    regex: '("client_secret":"[a-zA-Z0-9-_]{24}")'
  - name: heroku-api-key
    processor: regex
    regex: '[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}'
  # TODO: These all need to be evaluated, so they are commented out until we reach that stage
  #  - name: slack-webhook
  #    processor: regex
  #    regex: 'https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}'
  - name: gcp-service-account
    processor: regex
    regex: '"type": "service_account"'
  - name: twilio-api-key
    processor: regex
    regex: 'SK[a-z0-9]{32}'
  #  - name: password-in-url
  #    processor: regex
  #    regex: '[a-zA-Z]{3,10}://[^/\s:@]{3,20}:[^/\s:@]{3,20}@[^''"\s]+'
  #    whitelist-code-match:
  - name: generic-secret
    processor: regex
    regex: '[s|S][e|E][c|C][r|R][e|E][t|T].*[''|"][0-9a-zA-Z]{32,45}[''|"]'
    whitelist-code-match:
      - 'updateSecret "pantheon-(?:stage|onebox)" "[^"]+"'
      - 'secret_key": "klasjdflkasjdfalskdfjadfasdfasdfasdf"'

      # TODO: These all need to be evaluated, so they are here until we reach that stage
      - '\$(?:http_x_pantheon_secret) ?= ?(?:"[^"]+"|''[^'']+'')'
      - 'updateSecret "pantheon" "[^"]+"'
      - '''(?:api_secret|secret)'': ''[^'']+'',?'
      # PHP
      - 'define\(''(?:DESK_CONSUMER_SECRET|DESK_OAUTH_SECRET|ZERIGO_API_KEY)'', (?:"[^"]+"|''[^'']+'')\);'
      - '"(?:api_secret|secret_key|amazon_secret_key)": (?:"[^"]+"|''[^'']+''),?'
      - '\b(?:secret) = "[^"]+"'
  - name: generic-api-key
    processor: regex
    regex: '[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].*[''|"][0-9a-zA-Z]{32,45}[''|"]'
    whitelist-code-match:
      - 'api_key": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"'

      # TODO: These all need to be evaluated, so they are here until we reach that stage
      # PHP
      - 'Recurly_Client::\$apiKey = ''[^'']+'';'
      - 'define\(''?(?:TENDER_API_KEY|ZERIGO_API_KEY)''?, (?:"[^"]+"|''[^'']+'')\);'
      # Generic var set
      - '\b(?:HUBOT_PAGERDUTY_SERVICE_API_KEY|MIXPANEL_API_KEY|PIPEWISE_API_KEY|KISSMETRICS_API_KEY|API_KEY|ZERIGO_API_KEY|RECURLY_API_KEY|PINGDOM_API_KEY) ?= ?(?:"[^"]+"|''[^'']+'')'
      # Go
      - '\b(?:api_key) := ?"[^"]+"'
      # JSON
      - '"(?:api_key)": ?"[^"]+",?'

  # URL rules
  # This rule finds passwords in URLs and high entropy secrets in URL paths
  - name: url
    processor: url
    whitelist-code-match:
      # Secrets in path that follow a certain word
      - '/(?:display|clients?|folders?|commits?|blobs?|repos?|users?|uml|invite|samlp|zipball|VULCAN)/([^/?#]+)'

      # Secrets in querystrings that follow a certain word
      - 'gstatic.com/images?q=tbn:([A-Za-z0-9]+)'
      - 'raw\.githubusercontent\.com/[^?]+\?token=([A-Za-z0-9]+)'

      # docs.google.com links
      - '/(?:spreadsheets|document|drawings/file)/d/([^/?#]+)'

      #      - 'https://[^\.]+\.atlassian\.net/wiki/(?:display|spaces)/[^/]+/[^/]+(?:/[^/]+)/[^/)]+'
      - 'https://[^\.]+.googleusercontent.com/[^_ /]'

      # Not URLs
      - '--iscrypted ([^ "]+)`'

      # Passwords in URLs: Examples, tests, etc
      - '://user:pass@'
      - '://myuser:EXTRA_S3CUR3_PASS@'
      - '://user:password@'
      - '://username:password@'
      - '://userer:password@'
      - '://USERNAME:PASSWORD@'
      - '://root:root@'
      - '://bob:loblaw@'
      - '://test:secret@'
      - '://<strong>Me:Secret@'
      - '://proxy_user:proxy_pass@'
      - '://\[user:pass@\]'
      - '://drop:drop@'
      - '://$GITHUB_TOKEN:x-oauth-basic@'
      - '://new_user:new_password@'

      # TODO: These all need to be evaluated, so they are here until we reach that stage
      - 'mysql://pantheon:([^@]+)@dbserver\.dev\.'
      - 'mysql://pantheon:asfsdfadf@'
      - '://humaverse:humaverse@'
      - '://6dbd5d8927dc4bd4a103f15f23a49238:(f700bfa10aa9426a90f9e0126b5a332c)@sentry.io/1223770'
      - 'mysql://pantheon:([^@]+)@dbserver.live'
      - '://whyy:preview@live-fresh-air-archives.pantheonsite'
      - '://factinate1:factinate1@live-factinate1.pantheonsite'
      - 'mysqli://chapter3:LLC@'

  # PEM rules
  # This rule finds PEM formatted keys in one or multiple lines. Pass the type into "pem-type" to specify which type to find.
  # TODO: These all need to be evaulated, so they are commented out until we reach that stage
  #  - name: rsa-private-key-pem
  #    processor: pem
  #    pem-type: RSA PRIVATE KEY
  #  - name: openssh-private-key-pem
  #    processor: pem
  #    pem-type: OPENSSH PRIVATE KEY
  #  - name: ec-private-key-pem
  #    processor: pem
  #    pem-type: EC PRIVATE KEY
  #  - name: rsa-private-key-block-pem
  #    processor: pem
  #    pem-type: PGP PRIVATE KEY BLOCK

  # Entropy rules
  # This rule finds strings of a certain length that have high entropy when compared to the given character set.
  - name: entropy-base64
    processor: entropy
    entropy:
      charset: base64
      length-threshold: 20
      entropy-threshold: 4.5
    whitelist-code-match:
      # Querystring parameters
      - '[\?&]mkt_tok=[^/"\)]+'

      # Characters and obvious keyboard leans (order from more to less specific)
      - '(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\+/=)'
      - '(0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)'
      - '(abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789)'
      - '(abcdefghijklmnoprstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789)'
      - '(abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ)'
      - '(abcdefghijklmnopqrstuvwxyz0123456789)'
      - '(ABCDEFGHIJKLMNOPQRSTUVWXYZ)'
      - '(abcdefghijklmnopqrstuvwxyz)'
      - '(BdgGhHiIjLmnOrsStTUwWYyZz)'
      - '(BdgGhHiIjLmnNsStTUwWYyz)'
      - '(AaBdgGhHiIjLmnrstTUYyZz)'

      - 'auth0-client-id-admin-dashboard: (.+)\b'

      - '/srv/bindings/[a-zA-Z0-9]+'

      - 'ComposerStaticInit([^:\(]+)'
      - '(validEmptyBlockContainers=CKEDITOR)'
      - '''form_action_[^_]+_[^_]+_([^'']+)'''
      - '"signingCert": "'
      - 'file/d/[^/]+/edit'
      - '"druplicon" => "'
      - 'hash_salt'
      - '`\(''src'', ''([^'']+)''`'
      - '//# sourceMappingURL=[^,]+base64,.+$'
      - 'data:[^/]+/[^;]+;base64,([^"'']+)'
      - 'helios_and_internal.crt:\d+:(.+)$'
      - 'string\(\d+\) "([^"]+)"'
      - '\bcreated key \[([^\]]+)\]'
      - '\?client_id=([A-Za-z0-9]+)'

      # Python dict with a certain key
      - '"(?:druplicon|client_id)": "([^"]+)"'
      # JSON line with a certain key
      - '"(?:druplicon|client_id|device_credentials)": "([^"]+)"'
      # YAML line with a certain key
      - '(?:target_url|\.dockerconfigjson): (.+)$'
      - 'default_config_hash: [A-Za-z0-9_]+'
      # PHP assoc array value set
      - '\$[^[]+\[''(?:.*salt)''] = ''([^'']+)'';'
      # PHP assoc array value set like 'form_build_id' => 'secret',
      - '''form_build_id'' => ''form-([^'']+)'','

      - '<meta name="google-site-verification" content="([^"]+)" />'

      # TODO Add a file path conditional to these rules, since this is only OK in a .travis.yml
      - '- secure: "([^"]+)"'
      - '\.dockerconfigjson: secure: "([^"]+)"'

      # TODO: These all need to be evaluated, so they are here until we reach that stage
      # Ruby
      - 'ssh_keys [''([^'']+)'']'
      - '"(?:access_token)": "([^"]+)"'
      - '(?:target_url|certificate-authority-data): (.+)$'
      - '''(?:secret|read_device_credentials)'': ''[^"]+'''
      - 'proxy_set_header X-Frontend-Secret ([a-zA-Z0-9+/=]+)?'
      - 'auth0-client-id-dashboard=(.+)'
      - '\b(?:ssh-rsa|ssh-ed25519) ''?AAAA[0-9A-Za-z+/]+[=]{0,3}\b'
      - 'variables[''PANTHEON_WPVULNDB_API_TOKEN''] = ''([^'']+)'''
      - 'auth0-client-id-dashboard=[A-Za-z0-9]+'
      - '"audience": "([^"]+)",'
      - 'DNSActionRequiredLegacyNoHTTPSAlertBodyProviderUnknown'
      - 'Secret "pantheon" "([^"]+)"'

  - name: entropy-hex
    processor: entropy
    entropy:
      charset: hex
      length-threshold: 20
      entropy-threshold: 3
    whitelist-code-match:
      - '\.git@([^#]+)'

      # Git commit hash
      - 'git_ref\] = ''([^'']+)'''

      # Ruby dict assignment
      - '\[:(?:.*checksum|rpm_sha)] = (?:"([^"]+)"|''[^'']+'')'

      # Cert auth in JSON
      - '{"ca":"2\.0\$([^\$]+)\$'
      - '{"ca":"2\.0\$[^\$]+\$([^\$]+)\$'
      - '{"ca":"2\.0\$[^\$]+\$[^\$]+\$([^\$]+)\$'

      # Misc
      - 'PIPEWISE_API_KEY = ''([^'']+)'''

# TODO: These all need to be evaluated, so they are here until we reach that stage
whitelist-secret-ids:
  # PEMs
  - 0e988d29ae9a6bddce4e55a1a8f13b38ce16a7d8
  - 12744f5f45a0d1abd0640811a384fb47368959cb
  - 289b0f1e72e0287a65e2dbf12158a6ffa327e559
  # Slack webhooks
  - 139af8436fc382c9210dba945b522fe737097b85
  # URL
  - f13ece9cf6f771be24e1892109a592ff344873d6
  # Entropy base 64
  - f5a5d2d4fefcda31766a718caebf0ce1826f2042
  - f7b56cba100718e9641713115a265e60322b32b2
  - fb9928d3b4d2b673fec3d531da044aa60d9347ff
  # GCP service account
  - f79eadfab7557da5f7e3cfaa5bf1fa95abfb8059
  # Generic API Key
  - a57f55dbc4d45a18936dc6bda9fe72a365ded2dc
  - daed9e845ad752f4bbcc9c41acc6cc946fbcbd2b
  - 0b28d917b9a783a53d2c0360ecb495eef54b8e05
  - 2c8de93080ea14e13a7bc25d3108963ee88fbb0f
  # auth0-config
  - 02ad14c8795a5ba2a7655caff5eac43de1ba6a6c
  - 0cda8ba79cca6a8f945dc2ef3f2fac781a4d8c1c
  - 19f4ffd2d40e0f862c58104fe6005ea93535bdbf
  - 1f74c881c0ab53eb86d6f1d0ebf00de6ac145b8c
  - 2e67fe3072987125342643bd178f6b3e032192de
  - 39e89dc61c407fe58e77d902707dd9f0df4672b4
  - 665a407a606d3ba9eef9319a3a7cff85c1d58543
  - 79aa00707e645f107d38bffac7e74b25a2dd4212
  - c6693e025ddba6dacb8a11614a654719f40e3d7a
  # GCE infrastructure
  - 2754d10cba0c25c7a5680e27b511acc3c24ddbc9